/*
Deployment script for EmployeeDB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "EmployeeDB"
:setvar DefaultFilePrefix "EmployeeDB"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL16.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL16.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Starting rebuilding table [dbo].[Employee]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Employee] (
    [Id]           INT           IDENTITY (1, 1) NOT NULL,
    [EmpNo]        VARCHAR (6)   NOT NULL,
    [FirstName]    VARCHAR (15)  NOT NULL,
    [LastName]     VARCHAR (15)  NOT NULL,
    [Birthdate]    DATE          NOT NULL,
    [ContactNo]    NUMERIC (11)  NULL,
    [EmailAddress] VARCHAR (MAX) NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC),
    UNIQUE NONCLUSTERED ([EmpNo] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Employee])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Employee] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Employee] ([Id], [EmpNo], [FirstName], [LastName], [Birthdate], [ContactNo], [EmailAddress])
        SELECT   [Id],
                 [EmpNo],
                 [FirstName],
                 [LastName],
                 [Birthdate],
                 [ContactNo],
                 [EmailAddress]
        FROM     [dbo].[Employee]
        ORDER BY [Id] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Employee] OFF;
    END

DROP TABLE [dbo].[Employee];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Employee]', N'Employee';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Refreshing Procedure [dbo].[spGetAllEmployees]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[spGetAllEmployees]';


GO
PRINT N'Refreshing Procedure [dbo].[spInsertEmployee]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[spInsertEmployee]';


GO
PRINT N'Refreshing Procedure [dbo].[spResetAndPopulateEmployeeTable]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[spResetAndPopulateEmployeeTable]';


GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
SET ANSI_PADDING ON

EXEC spResetAndPopulateEmployeeTable;

SET ANSI_PADDING OFF
GO

GO
PRINT N'Update complete.';


GO
